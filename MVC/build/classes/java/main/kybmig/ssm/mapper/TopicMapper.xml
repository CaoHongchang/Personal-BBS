<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 和 java mapper 的类名一样，从包名开始打，有自动补全-->
<mapper namespace="kybmig.ssm.mapper.TopicMapper">
    <!-- resultType 和 mapper 中的方法返回值一样，不能省，从包名开始打，有自动补全-->
    <!--  里面的 sql 语句，有自动补全,要配置 ide 的 datasource -->
    <select id="selectAlltopic" resultType="kybmig.ssm.model.TopicModel">
        SELECT * FROM ssm.topic
    </select>

    <!-- 传参数方式1，直接传入一个基本类型 int，这个 int 会被绑定到 ${id} -->
    <select id="selecttopic" resultType="kybmig.ssm.model.TopicModel">
        SELECT * FROM ssm.topic WHERE id = #{id}
    </select>

    <!-- 让使用此resultMap的mybatis语句的返回值可以接收集合
        id属性:供其他mybatis语句使用resultMap属性调用
        type:表明返回值是哪个类
     -->
    <resultMap id="selectOneWithCommentsMap" type="kybmig.ssm.model.TopicModel">
        <!-- 通过resultMap内置标签将其与返回值的类的属性一一对应 -->
        <id property="id" column="id" />
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <collection property="commentList" ofType="kybmig.ssm.model.TopicCommentModel">
            <id property="id" column="c_id"/>
            <result property="content" column="c_content"/>
        </collection>

    </resultMap>

    <select id="selectOneWithComments" resultMap="selectOneWithCommentsMap">
        select
                ssm.topic.id,
                ssm.topic.title,
                ssm.topic.content,
                ssm.topiccomment.id as c_id,
                ssm.topiccomment.content as c_content
        From
                ssm.topic left join ssm.topiccomment
                        on topic.id = topiccomment.topicId
        where topic.id = #{id};
    </select>

    <resultMap id="selectOneWithCommentsAndUserMap" type="kybmig.ssm.model.TopicModel">
        <!-- 通过resultMap内置标签将其与返回值的类的属性一一对应 -->
        <id property="id" column="id" />
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="userId" column="t_userId"/>
        <collection property="commentList" ofType="kybmig.ssm.model.TopicCommentModel">
            <id property="id" column="c_id"/>
            <result property="content" column="c_content"/>
            <result property="updatedTime" column="c_updatedTime"/>
            <association property="user" javaType="kybmig.ssm.model.UserModel">
                <result property="username" column="u_username"/>

            </association>
        </collection>

    </resultMap>

    <select id="selectOneWithCommentsAndUser" resultMap="selectOneWithCommentsAndUserMap">
        select
                topic.id,
                topic.title,
                topic.content,
                topic.userId as t_userId,
                topiccomment.id as c_id,
                topiccomment.content as c_content,
                topiccomment.updatedTime as c_updatedTime,
                user.username as u_username
        From
                ssm.topic left join (topiccomment join user)
                        on topic.id = topiccomment.topicId and topiccomment.userId = user.id
        where topic.id = #{id};
    </select>

    <!-- 传参方式2，传入一个对象。content 代表这个对象的 content 属性，注意这个对象要有 getter setter -->
    <!-- useGeneratedKeys keyProperty 当我传入一个对象的时候，这两个属性可以把数据库创建的 id 赋值给这个对象 -->
    <insert id="inserttopic" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ssm.topic (content, title, userId, createdTime, updatedTime, boardId) VALUES (#{content}, #{title}, #{userId}, #{createdTime}, #{updatedTime}, #{boardId})
    </insert>

    <update id="updatetopic">
        UPDATE ssm.topic SET title = #{title}, content = #{content}, updatedTime = #{updatedTime}  WHERE id = #{id}
    </update>

    <delete id="deletetopic">
        DELETE FROM ssm.topic WHERE id = #{id}
    </delete>


    <resultMap id="selectAllTopicWithCommentsMap" type="kybmig.ssm.model.TopicModel">
        <!-- 通过resultMap内置标签将其与返回值的类的属性一一对应 -->
        <id property="id" column="t_id" />
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createdTime" column="createdTime"/>
        <result property="updatedTime" column="updatedTime"/>
        <result property="userId" column="userId"/>
        <collection property="commentList" ofType="kybmig.ssm.model.TopicCommentModel">
            <id property="id" column="c_id"/>
            <result property="content" column="c_content"/>
            <result property="updatedTime" column="c_updatedTime"/>
            <result property="topicId" column="c_topicId"/>
            <result property="updatedTime" column="lastComment"/>
            <association property="user" javaType="kybmig.ssm.model.UserModel">
                <result property="username" column="u_name"/>
            </association>
        </collection>
        <collection property="user" ofType="kybmig.ssm.model.UserModel">
            <result property="username" column="u_name"/>
        </collection>

    </resultMap>

    <select id="selectAlltopicByUserId" resultMap="selectAllTopicWithCommentsMap">
        select
                topic.id,
                topic.title,
                topic.content,
                topic.createdTime,
                topic.updatedTime,
                topic.userId,
                topiccomment.id as c_id,
                topiccomment.content as c_content,
                topiccomment.updatedTime as c_updatedTime,
                topiccomment.topicId as c_topicId,
                max(topiccomment.updatedTime) as lastComment,
                user.username as u_name

        From
                ssm.topic left join (ssm.topiccomment  join ssm.user)
                        on topic.id = topicComment.topicId and topicComment.userId = user.id

        where topic.userId = #{id}
        group by topicId
        order by lastComment desc;
    </select>


    <select id="selectOneWithCommentsByTopicId" resultMap="selectAllTopicWithCommentsMap">
        select
                topic.id as t_id,
                topic.title,
                topic.content,
                topic.createdTime,
                topic.updatedTime,
                topic.userId,
                topiccomment.id as c_id,
                topiccomment.content as c_content,
                topiccomment.updatedTime as c_updatedTime,
                topiccomment.topicId as c_topicId,
                topiccomment.userId as t_uId,
                user.username as u_name

        From
                ssm.topic left join (ssm.topiccomment join ssm.user)
                        on topic.id = topicComment.topicId and topicComment.userId = user.id
        where topiccomment.updatedTime = (select max(topiccomment.updatedTime) from topiccomment where topiccomment.topicId = #{t_id});

    </select>

    <select id="selectTopicIdByUserId" resultType="java.lang.Integer">
        select topic.id from topic where topic.userId = #{id};
    </select>

    <resultMap id="selectAlltopicByBoardIdMap" type="kybmig.ssm.model.TopicModel">
        <id property="id" column="t_id"/>
        <result property="title" column="t_title"/>
        <result property="userId" column="t_uId"/>
        <collection property="board" ofType="kybmig.ssm.model.BoardModel">
            <id property="id" column="b_id"/>
            <result property="name" column="b_name"/>
        </collection>
    </resultMap>

    <select id="selectAlltopicByBoardId" resultMap="selectAlltopicByBoardIdMap">
        SELECT
                topic.id as t_id,
                topic.title as t_title,
                topic.userId as t_uId,
                topic.updatedTime as t_updatedTime,
                board.id as b_id,
                board.name as b_name
        FROM ssm.topic join ssm.board
                on topic.boardId = board.id
        where board.id = #{id};
    </select>

</mapper>